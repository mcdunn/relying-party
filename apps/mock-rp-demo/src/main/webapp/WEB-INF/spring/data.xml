<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <jpa:repositories base-package="com.markcdunn" entity-manager-factory-ref="entityManagerFactory"
        transaction-manager-ref="transactionManager"/>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--bean id="dataSource" class="oracle.ucp.jdbc.PoolDataSourceFactory" factory-method="getPoolDataSource"
          lazy-init="true">
        <property name="connectionFactoryClassName" value="oracle.jdbc.pool.OracleDataSource"/>
        <property name="description" value="salsaConnectionPool"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="URL" value="${jdbc.url}"/>
        <property name="connectionPoolName" value="SALSA_POOL"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxPoolSize" value="50"/>
        <property name="inactiveConnectionTimeout" value="60"/>
        <property name="validateConnectionOnBorrow" value="true"/>
        <property name="connectionWaitTimeout" value="30"/>
        <property name="maxConnectionReuseTime" value="1800"/>
        <property name="maxStatements" value="25"/>
        <property name="connectionProperties">
            <props merge="default">
                <prop key="AutoCommit">false</prop>
            </props>
        </property>
    </bean-->

    <bean id="pum" class="org.springframework.data.jpa.support.MergingPersistenceUnitManager">
        <property name="persistenceXmlLocations">
            <list>
                <value>classpath*:META-INF/persistence.xml</value>
            </list>
        </property>
        <property name="defaultDataSource" ref="dataSource"></property>
    </bean>

    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:persistenceUnitName="persistence"
        p:persistenceUnitManager-ref="pum"
        p:dataSource-ref="dataSource"
        p:jpaVendorAdapter-ref="jpaAdapter"
        p:packagesToScan="com.markcdunn">
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.default_schema">${jdbc.defaultSchema}</prop>
            </props>
        </property>
    </bean>

    <bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="transactionManager"
          class="com.markcdunn.core.spring.transaction_manager.CustomJpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"
          p:dataSource-ref="dataSource">
        <qualifier value=""/>
     </bean>

    <bean id="jpaAdapter"
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
        p:database="${jpa.database}"
        p:showSql="${jpa.showSql}">
    </bean>
</beans>
